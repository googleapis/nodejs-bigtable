{
  "nested": {
    "google": {
      "nested": {
        "bigtable": {
          "nested": {
            "admin": {
              "nested": {
                "v2": {
                  "options": {
                    "csharp_namespace": "Google.Cloud.Bigtable.Admin.V2",
                    "go_package": "google.golang.org/genproto/googleapis/bigtable/admin/v2;admin",
                    "java_multiple_files": true,
                    "java_outer_classname": "TableProto",
                    "java_package": "com.google.bigtable.admin.v2",
                    "php_namespace": "Google\\Cloud\\Bigtable\\Admin\\V2",
                    "ruby_package": "Google::Cloud::Bigtable::Admin::V2",
                    "(google.api.resource_definition).type": "cloudkms.googleapis.com/CryptoKeyVersion",
                    "(google.api.resource_definition).pattern": "projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}/cryptoKeyVersions/{crypto_key_version}"
                  },
                  "nested": {
                    "BigtableInstanceAdmin": {
                      "options": {
                        "(google.api.default_host)": "bigtableadmin.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/bigtable.admin,https://www.googleapis.com/auth/bigtable.admin.cluster,https://www.googleapis.com/auth/bigtable.admin.instance,https://www.googleapis.com/auth/cloud-bigtable.admin,https://www.googleapis.com/auth/cloud-bigtable.admin.cluster,https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/cloud-platform.read-only"
                      },
                      "methods": {
                        "CreateInstance": {
                          "requestType": "CreateInstanceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v2/{parent=projects/*}/instances",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,instance_id,instance,clusters",
                            "(google.longrunning.operation_info).response_type": "Instance",
                            "(google.longrunning.operation_info).metadata_type": "CreateInstanceMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{parent=projects/*}/instances",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,instance_id,instance,clusters"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Instance",
                                "metadata_type": "CreateInstanceMetadata"
                              }
                            }
                          ]
                        },
                        "GetInstance": {
                          "requestType": "GetInstanceRequest",
                          "responseType": "Instance",
                          "options": {
                            "(google.api.http).get": "/v2/{name=projects/*/instances/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{name=projects/*/instances/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListInstances": {
                          "requestType": "ListInstancesRequest",
                          "responseType": "ListInstancesResponse",
                          "options": {
                            "(google.api.http).get": "/v2/{parent=projects/*}/instances",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{parent=projects/*}/instances"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateInstance": {
                          "requestType": "Instance",
                          "responseType": "Instance",
                          "options": {
                            "(google.api.http).put": "/v2/{name=projects/*/instances/*}",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "put": "/v2/{name=projects/*/instances/*}",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "PartialUpdateInstance": {
                          "requestType": "PartialUpdateInstanceRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v2/{instance.name=projects/*/instances/*}",
                            "(google.api.http).body": "instance",
                            "(google.api.method_signature)": "instance,update_mask",
                            "(google.longrunning.operation_info).response_type": "Instance",
                            "(google.longrunning.operation_info).metadata_type": "UpdateInstanceMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v2/{instance.name=projects/*/instances/*}",
                                "body": "instance"
                              }
                            },
                            {
                              "(google.api.method_signature)": "instance,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Instance",
                                "metadata_type": "UpdateInstanceMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteInstance": {
                          "requestType": "DeleteInstanceRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v2/{name=projects/*/instances/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2/{name=projects/*/instances/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateCluster": {
                          "requestType": "CreateClusterRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v2/{parent=projects/*/instances/*}/clusters",
                            "(google.api.http).body": "cluster",
                            "(google.api.method_signature)": "parent,cluster_id,cluster",
                            "(google.longrunning.operation_info).response_type": "Cluster",
                            "(google.longrunning.operation_info).metadata_type": "CreateClusterMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{parent=projects/*/instances/*}/clusters",
                                "body": "cluster"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,cluster_id,cluster"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Cluster",
                                "metadata_type": "CreateClusterMetadata"
                              }
                            }
                          ]
                        },
                        "GetCluster": {
                          "requestType": "GetClusterRequest",
                          "responseType": "Cluster",
                          "options": {
                            "(google.api.http).get": "/v2/{name=projects/*/instances/*/clusters/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{name=projects/*/instances/*/clusters/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListClusters": {
                          "requestType": "ListClustersRequest",
                          "responseType": "ListClustersResponse",
                          "options": {
                            "(google.api.http).get": "/v2/{parent=projects/*/instances/*}/clusters",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{parent=projects/*/instances/*}/clusters"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateCluster": {
                          "requestType": "Cluster",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).put": "/v2/{name=projects/*/instances/*/clusters/*}",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "Cluster",
                            "(google.longrunning.operation_info).metadata_type": "UpdateClusterMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "put": "/v2/{name=projects/*/instances/*/clusters/*}",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Cluster",
                                "metadata_type": "UpdateClusterMetadata"
                              }
                            }
                          ]
                        },
                        "PartialUpdateCluster": {
                          "requestType": "PartialUpdateClusterRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v2/{cluster.name=projects/*/instances/*/clusters/*}",
                            "(google.api.http).body": "cluster",
                            "(google.api.method_signature)": "cluster,update_mask",
                            "(google.longrunning.operation_info).response_type": "Cluster",
                            "(google.longrunning.operation_info).metadata_type": "PartialUpdateClusterMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v2/{cluster.name=projects/*/instances/*/clusters/*}",
                                "body": "cluster"
                              }
                            },
                            {
                              "(google.api.method_signature)": "cluster,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Cluster",
                                "metadata_type": "PartialUpdateClusterMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteCluster": {
                          "requestType": "DeleteClusterRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v2/{name=projects/*/instances/*/clusters/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2/{name=projects/*/instances/*/clusters/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateAppProfile": {
                          "requestType": "CreateAppProfileRequest",
                          "responseType": "AppProfile",
                          "options": {
                            "(google.api.http).post": "/v2/{parent=projects/*/instances/*}/appProfiles",
                            "(google.api.http).body": "app_profile",
                            "(google.api.method_signature)": "parent,app_profile_id,app_profile"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{parent=projects/*/instances/*}/appProfiles",
                                "body": "app_profile"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,app_profile_id,app_profile"
                            }
                          ]
                        },
                        "GetAppProfile": {
                          "requestType": "GetAppProfileRequest",
                          "responseType": "AppProfile",
                          "options": {
                            "(google.api.http).get": "/v2/{name=projects/*/instances/*/appProfiles/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{name=projects/*/instances/*/appProfiles/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListAppProfiles": {
                          "requestType": "ListAppProfilesRequest",
                          "responseType": "ListAppProfilesResponse",
                          "options": {
                            "(google.api.http).get": "/v2/{parent=projects/*/instances/*}/appProfiles",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{parent=projects/*/instances/*}/appProfiles"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "UpdateAppProfile": {
                          "requestType": "UpdateAppProfileRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v2/{app_profile.name=projects/*/instances/*/appProfiles/*}",
                            "(google.api.http).body": "app_profile",
                            "(google.api.method_signature)": "app_profile,update_mask",
                            "(google.longrunning.operation_info).response_type": "AppProfile",
                            "(google.longrunning.operation_info).metadata_type": "UpdateAppProfileMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v2/{app_profile.name=projects/*/instances/*/appProfiles/*}",
                                "body": "app_profile"
                              }
                            },
                            {
                              "(google.api.method_signature)": "app_profile,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "AppProfile",
                                "metadata_type": "UpdateAppProfileMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteAppProfile": {
                          "requestType": "DeleteAppProfileRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v2/{name=projects/*/instances/*/appProfiles/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2/{name=projects/*/instances/*/appProfiles/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "GetIamPolicy": {
                          "requestType": "google.iam.v1.GetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).post": "/v2/{resource=projects/*/instances/*}:getIamPolicy",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "resource"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{resource=projects/*/instances/*}:getIamPolicy",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "resource"
                            }
                          ]
                        },
                        "SetIamPolicy": {
                          "requestType": "google.iam.v1.SetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).post": "/v2/{resource=projects/*/instances/*}:setIamPolicy",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "resource,policy"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{resource=projects/*/instances/*}:setIamPolicy",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "resource,policy"
                            }
                          ]
                        },
                        "TestIamPermissions": {
                          "requestType": "google.iam.v1.TestIamPermissionsRequest",
                          "responseType": "google.iam.v1.TestIamPermissionsResponse",
                          "options": {
                            "(google.api.http).post": "/v2/{resource=projects/*/instances/*}:testIamPermissions",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "resource,permissions"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{resource=projects/*/instances/*}:testIamPermissions",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "resource,permissions"
                            }
                          ]
                        },
                        "ListHotTablets": {
                          "requestType": "ListHotTabletsRequest",
                          "responseType": "ListHotTabletsResponse",
                          "options": {
                            "(google.api.http).get": "/v2/{parent=projects/*/instances/*/clusters/*}/hotTablets",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{parent=projects/*/instances/*/clusters/*}/hotTablets"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "CreateInstanceRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudresourcemanager.googleapis.com/Project"
                          }
                        },
                        "instanceId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "instance": {
                          "type": "Instance",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "clusters": {
                          "keyType": "string",
                          "type": "Cluster",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetInstanceRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Instance"
                          }
                        }
                      }
                    },
                    "ListInstancesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudresourcemanager.googleapis.com/Project"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ListInstancesResponse": {
                      "fields": {
                        "instances": {
                          "rule": "repeated",
                          "type": "Instance",
                          "id": 1
                        },
                        "failedLocations": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "PartialUpdateInstanceRequest": {
                      "fields": {
                        "instance": {
                          "type": "Instance",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteInstanceRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Instance"
                          }
                        }
                      }
                    },
                    "CreateClusterRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Instance"
                          }
                        },
                        "clusterId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "cluster": {
                          "type": "Cluster",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetClusterRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Cluster"
                          }
                        }
                      }
                    },
                    "ListClustersRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Instance"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ListClustersResponse": {
                      "fields": {
                        "clusters": {
                          "rule": "repeated",
                          "type": "Cluster",
                          "id": 1
                        },
                        "failedLocations": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "DeleteClusterRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Cluster"
                          }
                        }
                      }
                    },
                    "CreateInstanceMetadata": {
                      "fields": {
                        "originalRequest": {
                          "type": "CreateInstanceRequest",
                          "id": 1
                        },
                        "requestTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "finishTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        }
                      }
                    },
                    "UpdateInstanceMetadata": {
                      "fields": {
                        "originalRequest": {
                          "type": "PartialUpdateInstanceRequest",
                          "id": 1
                        },
                        "requestTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "finishTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        }
                      }
                    },
                    "CreateClusterMetadata": {
                      "fields": {
                        "originalRequest": {
                          "type": "CreateClusterRequest",
                          "id": 1
                        },
                        "requestTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "finishTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        }
                      }
                    },
                    "UpdateClusterMetadata": {
                      "fields": {
                        "originalRequest": {
                          "type": "Cluster",
                          "id": 1
                        },
                        "requestTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "finishTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        }
                      }
                    },
                    "PartialUpdateClusterMetadata": {
                      "fields": {
                        "requestTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1
                        },
                        "finishTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "originalRequest": {
                          "type": "PartialUpdateClusterRequest",
                          "id": 3
                        }
                      }
                    },
                    "PartialUpdateClusterRequest": {
                      "fields": {
                        "cluster": {
                          "type": "Cluster",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreateAppProfileRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Instance"
                          }
                        },
                        "appProfileId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "appProfile": {
                          "type": "AppProfile",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "ignoreWarnings": {
                          "type": "bool",
                          "id": 4
                        }
                      }
                    },
                    "GetAppProfileRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/AppProfile"
                          }
                        }
                      }
                    },
                    "ListAppProfilesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Instance"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ListAppProfilesResponse": {
                      "fields": {
                        "appProfiles": {
                          "rule": "repeated",
                          "type": "AppProfile",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "failedLocations": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "UpdateAppProfileRequest": {
                      "fields": {
                        "appProfile": {
                          "type": "AppProfile",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "ignoreWarnings": {
                          "type": "bool",
                          "id": 3
                        }
                      }
                    },
                    "DeleteAppProfileRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/AppProfile"
                          }
                        },
                        "ignoreWarnings": {
                          "type": "bool",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateAppProfileMetadata": {
                      "fields": {}
                    },
                    "ListHotTabletsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Cluster"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 4
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListHotTabletsResponse": {
                      "fields": {
                        "hotTablets": {
                          "rule": "repeated",
                          "type": "HotTablet",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "Instance": {
                      "options": {
                        "(google.api.resource).type": "bigtableadmin.googleapis.com/Instance",
                        "(google.api.resource).pattern": "projects/{project}/instances/{instance}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 3
                        },
                        "type": {
                          "type": "Type",
                          "id": 4
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 5
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_NOT_KNOWN": 0,
                            "READY": 1,
                            "CREATING": 2
                          }
                        },
                        "Type": {
                          "values": {
                            "TYPE_UNSPECIFIED": 0,
                            "PRODUCTION": 1,
                            "DEVELOPMENT": 2
                          }
                        }
                      }
                    },
                    "AutoscalingTargets": {
                      "fields": {
                        "cpuUtilizationPercent": {
                          "type": "int32",
                          "id": 2
                        }
                      }
                    },
                    "AutoscalingLimits": {
                      "fields": {
                        "minServeNodes": {
                          "type": "int32",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "maxServeNodes": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "Cluster": {
                      "options": {
                        "(google.api.resource).type": "bigtableadmin.googleapis.com/Cluster",
                        "(google.api.resource).pattern": "projects/{project}/instances/{instance}/clusters/{cluster}"
                      },
                      "oneofs": {
                        "config": {
                          "oneof": [
                            "clusterConfig"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "location": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "serveNodes": {
                          "type": "int32",
                          "id": 4
                        },
                        "clusterConfig": {
                          "type": "ClusterConfig",
                          "id": 7
                        },
                        "defaultStorageType": {
                          "type": "StorageType",
                          "id": 5
                        },
                        "encryptionConfig": {
                          "type": "EncryptionConfig",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        }
                      },
                      "nested": {
                        "ClusterAutoscalingConfig": {
                          "fields": {
                            "autoscalingLimits": {
                              "type": "AutoscalingLimits",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "autoscalingTargets": {
                              "type": "AutoscalingTargets",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "ClusterConfig": {
                          "fields": {
                            "clusterAutoscalingConfig": {
                              "type": "ClusterAutoscalingConfig",
                              "id": 1
                            }
                          }
                        },
                        "EncryptionConfig": {
                          "fields": {
                            "kmsKeyName": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKey"
                              }
                            }
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_NOT_KNOWN": 0,
                            "READY": 1,
                            "CREATING": 2,
                            "RESIZING": 3,
                            "DISABLED": 4
                          }
                        }
                      }
                    },
                    "AppProfile": {
                      "options": {
                        "(google.api.resource).type": "bigtableadmin.googleapis.com/AppProfile",
                        "(google.api.resource).pattern": "projects/{project}/instances/{instance}/appProfiles/{app_profile}"
                      },
                      "oneofs": {
                        "routingPolicy": {
                          "oneof": [
                            "multiClusterRoutingUseAny",
                            "singleClusterRouting"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "etag": {
                          "type": "string",
                          "id": 2
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "multiClusterRoutingUseAny": {
                          "type": "MultiClusterRoutingUseAny",
                          "id": 5
                        },
                        "singleClusterRouting": {
                          "type": "SingleClusterRouting",
                          "id": 6
                        }
                      },
                      "nested": {
                        "MultiClusterRoutingUseAny": {
                          "fields": {
                            "clusterIds": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "SingleClusterRouting": {
                          "fields": {
                            "clusterId": {
                              "type": "string",
                              "id": 1
                            },
                            "allowTransactionalWrites": {
                              "type": "bool",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "HotTablet": {
                      "options": {
                        "(google.api.resource).type": "bigtableadmin.googleapis.com/HotTablet",
                        "(google.api.resource).pattern": "projects/{project}/instances/{instance}/clusters/{cluster}/hotTablets/{hot_tablet}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "tableName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Table"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startKey": {
                          "type": "string",
                          "id": 5
                        },
                        "endKey": {
                          "type": "string",
                          "id": 6
                        },
                        "nodeCpuUsagePercent": {
                          "type": "float",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "StorageType": {
                      "values": {
                        "STORAGE_TYPE_UNSPECIFIED": 0,
                        "SSD": 1,
                        "HDD": 2
                      }
                    },
                    "OperationProgress": {
                      "fields": {
                        "progressPercent": {
                          "type": "int32",
                          "id": 1
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        }
                      }
                    },
                    "BigtableTableAdmin": {
                      "options": {
                        "(google.api.default_host)": "bigtableadmin.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/bigtable.admin,https://www.googleapis.com/auth/bigtable.admin.table,https://www.googleapis.com/auth/cloud-bigtable.admin,https://www.googleapis.com/auth/cloud-bigtable.admin.table,https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/cloud-platform.read-only"
                      },
                      "methods": {
                        "CreateTable": {
                          "requestType": "CreateTableRequest",
                          "responseType": "Table",
                          "options": {
                            "(google.api.http).post": "/v2/{parent=projects/*/instances/*}/tables",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,table_id,table"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{parent=projects/*/instances/*}/tables",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,table_id,table"
                            }
                          ]
                        },
                        "CreateTableFromSnapshot": {
                          "requestType": "CreateTableFromSnapshotRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v2/{parent=projects/*/instances/*}/tables:createFromSnapshot",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "parent,table_id,source_snapshot",
                            "(google.longrunning.operation_info).response_type": "Table",
                            "(google.longrunning.operation_info).metadata_type": "CreateTableFromSnapshotMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{parent=projects/*/instances/*}/tables:createFromSnapshot",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,table_id,source_snapshot"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Table",
                                "metadata_type": "CreateTableFromSnapshotMetadata"
                              }
                            }
                          ]
                        },
                        "ListTables": {
                          "requestType": "ListTablesRequest",
                          "responseType": "ListTablesResponse",
                          "options": {
                            "(google.api.http).get": "/v2/{parent=projects/*/instances/*}/tables",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{parent=projects/*/instances/*}/tables"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetTable": {
                          "requestType": "GetTableRequest",
                          "responseType": "Table",
                          "options": {
                            "(google.api.http).get": "/v2/{name=projects/*/instances/*/tables/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{name=projects/*/instances/*/tables/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "DeleteTable": {
                          "requestType": "DeleteTableRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v2/{name=projects/*/instances/*/tables/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2/{name=projects/*/instances/*/tables/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ModifyColumnFamilies": {
                          "requestType": "ModifyColumnFamiliesRequest",
                          "responseType": "Table",
                          "options": {
                            "(google.api.http).post": "/v2/{name=projects/*/instances/*/tables/*}:modifyColumnFamilies",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,modifications"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{name=projects/*/instances/*/tables/*}:modifyColumnFamilies",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,modifications"
                            }
                          ]
                        },
                        "DropRowRange": {
                          "requestType": "DropRowRangeRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).post": "/v2/{name=projects/*/instances/*/tables/*}:dropRowRange",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{name=projects/*/instances/*/tables/*}:dropRowRange",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "GenerateConsistencyToken": {
                          "requestType": "GenerateConsistencyTokenRequest",
                          "responseType": "GenerateConsistencyTokenResponse",
                          "options": {
                            "(google.api.http).post": "/v2/{name=projects/*/instances/*/tables/*}:generateConsistencyToken",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{name=projects/*/instances/*/tables/*}:generateConsistencyToken",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CheckConsistency": {
                          "requestType": "CheckConsistencyRequest",
                          "responseType": "CheckConsistencyResponse",
                          "options": {
                            "(google.api.http).post": "/v2/{name=projects/*/instances/*/tables/*}:checkConsistency",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,consistency_token"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{name=projects/*/instances/*/tables/*}:checkConsistency",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,consistency_token"
                            }
                          ]
                        },
                        "SnapshotTable": {
                          "requestType": "SnapshotTableRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v2/{name=projects/*/instances/*/tables/*}:snapshot",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,cluster,snapshot_id,description",
                            "(google.longrunning.operation_info).response_type": "Snapshot",
                            "(google.longrunning.operation_info).metadata_type": "SnapshotTableMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{name=projects/*/instances/*/tables/*}:snapshot",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,cluster,snapshot_id,description"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Snapshot",
                                "metadata_type": "SnapshotTableMetadata"
                              }
                            }
                          ]
                        },
                        "GetSnapshot": {
                          "requestType": "GetSnapshotRequest",
                          "responseType": "Snapshot",
                          "options": {
                            "(google.api.http).get": "/v2/{name=projects/*/instances/*/clusters/*/snapshots/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{name=projects/*/instances/*/clusters/*/snapshots/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListSnapshots": {
                          "requestType": "ListSnapshotsRequest",
                          "responseType": "ListSnapshotsResponse",
                          "options": {
                            "(google.api.http).get": "/v2/{parent=projects/*/instances/*/clusters/*}/snapshots",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{parent=projects/*/instances/*/clusters/*}/snapshots"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "DeleteSnapshot": {
                          "requestType": "DeleteSnapshotRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v2/{name=projects/*/instances/*/clusters/*/snapshots/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2/{name=projects/*/instances/*/clusters/*/snapshots/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateBackup": {
                          "requestType": "CreateBackupRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v2/{parent=projects/*/instances/*/clusters/*}/backups",
                            "(google.api.http).body": "backup",
                            "(google.api.method_signature)": "parent,backup_id,backup",
                            "(google.longrunning.operation_info).response_type": "Backup",
                            "(google.longrunning.operation_info).metadata_type": "CreateBackupMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{parent=projects/*/instances/*/clusters/*}/backups",
                                "body": "backup"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,backup_id,backup"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Backup",
                                "metadata_type": "CreateBackupMetadata"
                              }
                            }
                          ]
                        },
                        "GetBackup": {
                          "requestType": "GetBackupRequest",
                          "responseType": "Backup",
                          "options": {
                            "(google.api.http).get": "/v2/{name=projects/*/instances/*/clusters/*/backups/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{name=projects/*/instances/*/clusters/*/backups/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdateBackup": {
                          "requestType": "UpdateBackupRequest",
                          "responseType": "Backup",
                          "options": {
                            "(google.api.http).patch": "/v2/{backup.name=projects/*/instances/*/clusters/*/backups/*}",
                            "(google.api.http).body": "backup",
                            "(google.api.method_signature)": "backup,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v2/{backup.name=projects/*/instances/*/clusters/*/backups/*}",
                                "body": "backup"
                              }
                            },
                            {
                              "(google.api.method_signature)": "backup,update_mask"
                            }
                          ]
                        },
                        "DeleteBackup": {
                          "requestType": "DeleteBackupRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v2/{name=projects/*/instances/*/clusters/*/backups/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2/{name=projects/*/instances/*/clusters/*/backups/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListBackups": {
                          "requestType": "ListBackupsRequest",
                          "responseType": "ListBackupsResponse",
                          "options": {
                            "(google.api.http).get": "/v2/{parent=projects/*/instances/*/clusters/*}/backups",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{parent=projects/*/instances/*/clusters/*}/backups"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "RestoreTable": {
                          "requestType": "RestoreTableRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v2/{parent=projects/*/instances/*}/tables:restore",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "Table",
                            "(google.longrunning.operation_info).metadata_type": "RestoreTableMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{parent=projects/*/instances/*}/tables:restore",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Table",
                                "metadata_type": "RestoreTableMetadata"
                              }
                            }
                          ]
                        },
                        "GetIamPolicy": {
                          "requestType": "google.iam.v1.GetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).post": "/v2/{resource=projects/*/instances/*/tables/*}:getIamPolicy",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v2/{resource=projects/*/instances/*/clusters/*/backups/*}:getIamPolicy",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "resource"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{resource=projects/*/instances/*/tables/*}:getIamPolicy",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v2/{resource=projects/*/instances/*/clusters/*/backups/*}:getIamPolicy",
                                  "body": "*"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "resource"
                            }
                          ]
                        },
                        "SetIamPolicy": {
                          "requestType": "google.iam.v1.SetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).post": "/v2/{resource=projects/*/instances/*/tables/*}:setIamPolicy",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v2/{resource=projects/*/instances/*/clusters/*/backups/*}:setIamPolicy",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "resource,policy"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{resource=projects/*/instances/*/tables/*}:setIamPolicy",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v2/{resource=projects/*/instances/*/clusters/*/backups/*}:setIamPolicy",
                                  "body": "*"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "resource,policy"
                            }
                          ]
                        },
                        "TestIamPermissions": {
                          "requestType": "google.iam.v1.TestIamPermissionsRequest",
                          "responseType": "google.iam.v1.TestIamPermissionsResponse",
                          "options": {
                            "(google.api.http).post": "/v2/{resource=projects/*/instances/*/tables/*}:testIamPermissions",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v2/{resource=projects/*/instances/*/clusters/*/backups/*}:testIamPermissions",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "resource,permissions"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{resource=projects/*/instances/*/tables/*}:testIamPermissions",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v2/{resource=projects/*/instances/*/clusters/*/backups/*}:testIamPermissions",
                                  "body": "*"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "resource,permissions"
                            }
                          ]
                        }
                      }
                    },
                    "RestoreTableRequest": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "backup"
                          ]
                        }
                      },
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Instance"
                          }
                        },
                        "tableId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "backup": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Backup"
                          }
                        }
                      }
                    },
                    "RestoreTableMetadata": {
                      "oneofs": {
                        "sourceInfo": {
                          "oneof": [
                            "backupInfo"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "sourceType": {
                          "type": "RestoreSourceType",
                          "id": 2
                        },
                        "backupInfo": {
                          "type": "BackupInfo",
                          "id": 3
                        },
                        "optimizeTableOperationName": {
                          "type": "string",
                          "id": 4
                        },
                        "progress": {
                          "type": "OperationProgress",
                          "id": 5
                        }
                      }
                    },
                    "OptimizeRestoredTableMetadata": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "progress": {
                          "type": "OperationProgress",
                          "id": 2
                        }
                      }
                    },
                    "CreateTableRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Instance"
                          }
                        },
                        "tableId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "table": {
                          "type": "Table",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "initialSplits": {
                          "rule": "repeated",
                          "type": "Split",
                          "id": 4
                        }
                      },
                      "nested": {
                        "Split": {
                          "fields": {
                            "key": {
                              "type": "bytes",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "CreateTableFromSnapshotRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Instance"
                          }
                        },
                        "tableId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "sourceSnapshot": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Snapshot"
                          }
                        }
                      }
                    },
                    "DropRowRangeRequest": {
                      "oneofs": {
                        "target": {
                          "oneof": [
                            "rowKeyPrefix",
                            "deleteAllDataFromTable"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Table"
                          }
                        },
                        "rowKeyPrefix": {
                          "type": "bytes",
                          "id": 2
                        },
                        "deleteAllDataFromTable": {
                          "type": "bool",
                          "id": 3
                        }
                      }
                    },
                    "ListTablesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Instance"
                          }
                        },
                        "view": {
                          "type": "Table.View",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 4
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListTablesResponse": {
                      "fields": {
                        "tables": {
                          "rule": "repeated",
                          "type": "Table",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetTableRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Table"
                          }
                        },
                        "view": {
                          "type": "Table.View",
                          "id": 2
                        }
                      }
                    },
                    "DeleteTableRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Table"
                          }
                        }
                      }
                    },
                    "ModifyColumnFamiliesRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Table"
                          }
                        },
                        "modifications": {
                          "rule": "repeated",
                          "type": "Modification",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      },
                      "nested": {
                        "Modification": {
                          "oneofs": {
                            "mod": {
                              "oneof": [
                                "create",
                                "update",
                                "drop"
                              ]
                            }
                          },
                          "fields": {
                            "id": {
                              "type": "string",
                              "id": 1
                            },
                            "create": {
                              "type": "ColumnFamily",
                              "id": 2
                            },
                            "update": {
                              "type": "ColumnFamily",
                              "id": 3
                            },
                            "drop": {
                              "type": "bool",
                              "id": 4
                            }
                          }
                        }
                      }
                    },
                    "GenerateConsistencyTokenRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Table"
                          }
                        }
                      }
                    },
                    "GenerateConsistencyTokenResponse": {
                      "fields": {
                        "consistencyToken": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "CheckConsistencyRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Table"
                          }
                        },
                        "consistencyToken": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CheckConsistencyResponse": {
                      "fields": {
                        "consistent": {
                          "type": "bool",
                          "id": 1
                        }
                      }
                    },
                    "SnapshotTableRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Table"
                          }
                        },
                        "cluster": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Cluster"
                          }
                        },
                        "snapshotId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "ttl": {
                          "type": "google.protobuf.Duration",
                          "id": 4
                        },
                        "description": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "GetSnapshotRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Snapshot"
                          }
                        }
                      }
                    },
                    "ListSnapshotsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Cluster"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListSnapshotsResponse": {
                      "fields": {
                        "snapshots": {
                          "rule": "repeated",
                          "type": "Snapshot",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DeleteSnapshotRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Snapshot"
                          }
                        }
                      }
                    },
                    "SnapshotTableMetadata": {
                      "fields": {
                        "originalRequest": {
                          "type": "SnapshotTableRequest",
                          "id": 1
                        },
                        "requestTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "finishTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        }
                      }
                    },
                    "CreateTableFromSnapshotMetadata": {
                      "fields": {
                        "originalRequest": {
                          "type": "CreateTableFromSnapshotRequest",
                          "id": 1
                        },
                        "requestTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "finishTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        }
                      }
                    },
                    "CreateBackupRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Cluster"
                          }
                        },
                        "backupId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "backup": {
                          "type": "Backup",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreateBackupMetadata": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "sourceTable": {
                          "type": "string",
                          "id": 2
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4
                        }
                      }
                    },
                    "UpdateBackupRequest": {
                      "fields": {
                        "backup": {
                          "type": "Backup",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetBackupRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Backup"
                          }
                        }
                      }
                    },
                    "DeleteBackupRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Backup"
                          }
                        }
                      }
                    },
                    "ListBackupsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Cluster"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 3
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 4
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListBackupsResponse": {
                      "fields": {
                        "backups": {
                          "rule": "repeated",
                          "type": "Backup",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "RestoreSourceType": {
                      "values": {
                        "RESTORE_SOURCE_TYPE_UNSPECIFIED": 0,
                        "BACKUP": 1
                      }
                    },
                    "RestoreInfo": {
                      "oneofs": {
                        "sourceInfo": {
                          "oneof": [
                            "backupInfo"
                          ]
                        }
                      },
                      "fields": {
                        "sourceType": {
                          "type": "RestoreSourceType",
                          "id": 1
                        },
                        "backupInfo": {
                          "type": "BackupInfo",
                          "id": 2
                        }
                      }
                    },
                    "Table": {
                      "options": {
                        "(google.api.resource).type": "bigtableadmin.googleapis.com/Table",
                        "(google.api.resource).pattern": "projects/{project}/instances/{instance}/tables/{table}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "clusterStates": {
                          "keyType": "string",
                          "type": "ClusterState",
                          "id": 2
                        },
                        "columnFamilies": {
                          "keyType": "string",
                          "type": "ColumnFamily",
                          "id": 3
                        },
                        "granularity": {
                          "type": "TimestampGranularity",
                          "id": 4
                        },
                        "restoreInfo": {
                          "type": "RestoreInfo",
                          "id": 6
                        }
                      },
                      "nested": {
                        "ClusterState": {
                          "fields": {
                            "replicationState": {
                              "type": "ReplicationState",
                              "id": 1
                            },
                            "encryptionInfo": {
                              "rule": "repeated",
                              "type": "EncryptionInfo",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "ReplicationState": {
                              "values": {
                                "STATE_NOT_KNOWN": 0,
                                "INITIALIZING": 1,
                                "PLANNED_MAINTENANCE": 2,
                                "UNPLANNED_MAINTENANCE": 3,
                                "READY": 4,
                                "READY_OPTIMIZING": 5
                              }
                            }
                          }
                        },
                        "TimestampGranularity": {
                          "values": {
                            "TIMESTAMP_GRANULARITY_UNSPECIFIED": 0,
                            "MILLIS": 1
                          }
                        },
                        "View": {
                          "values": {
                            "VIEW_UNSPECIFIED": 0,
                            "NAME_ONLY": 1,
                            "SCHEMA_VIEW": 2,
                            "REPLICATION_VIEW": 3,
                            "ENCRYPTION_VIEW": 5,
                            "FULL": 4
                          }
                        }
                      }
                    },
                    "ColumnFamily": {
                      "fields": {
                        "gcRule": {
                          "type": "GcRule",
                          "id": 1
                        }
                      }
                    },
                    "GcRule": {
                      "oneofs": {
                        "rule": {
                          "oneof": [
                            "maxNumVersions",
                            "maxAge",
                            "intersection",
                            "union"
                          ]
                        }
                      },
                      "fields": {
                        "maxNumVersions": {
                          "type": "int32",
                          "id": 1
                        },
                        "maxAge": {
                          "type": "google.protobuf.Duration",
                          "id": 2
                        },
                        "intersection": {
                          "type": "Intersection",
                          "id": 3
                        },
                        "union": {
                          "type": "Union",
                          "id": 4
                        }
                      },
                      "nested": {
                        "Intersection": {
                          "fields": {
                            "rules": {
                              "rule": "repeated",
                              "type": "GcRule",
                              "id": 1
                            }
                          }
                        },
                        "Union": {
                          "fields": {
                            "rules": {
                              "rule": "repeated",
                              "type": "GcRule",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "EncryptionInfo": {
                      "fields": {
                        "encryptionType": {
                          "type": "EncryptionType",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "encryptionStatus": {
                          "type": "google.rpc.Status",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "kmsKeyVersion": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKeyVersion"
                          }
                        }
                      },
                      "nested": {
                        "EncryptionType": {
                          "values": {
                            "ENCRYPTION_TYPE_UNSPECIFIED": 0,
                            "GOOGLE_DEFAULT_ENCRYPTION": 1,
                            "CUSTOMER_MANAGED_ENCRYPTION": 2
                          }
                        }
                      }
                    },
                    "Snapshot": {
                      "options": {
                        "(google.api.resource).type": "bigtableadmin.googleapis.com/Snapshot",
                        "(google.api.resource).pattern": "projects/{project}/instances/{instance}/clusters/{cluster}/snapshots/{snapshot}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "sourceTable": {
                          "type": "Table",
                          "id": 2
                        },
                        "dataSizeBytes": {
                          "type": "int64",
                          "id": 3
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4
                        },
                        "deleteTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5
                        },
                        "state": {
                          "type": "State",
                          "id": 6
                        },
                        "description": {
                          "type": "string",
                          "id": 7
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_NOT_KNOWN": 0,
                            "READY": 1,
                            "CREATING": 2
                          }
                        }
                      }
                    },
                    "Backup": {
                      "options": {
                        "(google.api.resource).type": "bigtableadmin.googleapis.com/Backup",
                        "(google.api.resource).pattern": "projects/{project}/instances/{instance}/clusters/{cluster}/backups/{backup}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "sourceTable": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "expireTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "sizeBytes": {
                          "type": "int64",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "state": {
                          "type": "State",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "encryptionInfo": {
                          "type": "EncryptionInfo",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "CREATING": 1,
                            "READY": 2
                          }
                        }
                      }
                    },
                    "BackupInfo": {
                      "fields": {
                        "backup": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "startTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "sourceTable": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "v2": {
              "options": {
                "csharp_namespace": "Google.Cloud.Bigtable.V2",
                "go_package": "google.golang.org/genproto/googleapis/bigtable/v2;bigtable",
                "java_multiple_files": true,
                "java_outer_classname": "DataProto",
                "java_package": "com.google.bigtable.v2",
                "php_namespace": "Google\\Cloud\\Bigtable\\V2",
                "ruby_package": "Google::Cloud::Bigtable::V2",
                "(google.api.resource_definition).type": "bigtableadmin.googleapis.com/Instance",
                "(google.api.resource_definition).pattern": "projects/{project}/instances/{instance}"
              },
              "nested": {
                "Bigtable": {
                  "options": {
                    "(google.api.default_host)": "bigtable.googleapis.com",
                    "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/bigtable.data,https://www.googleapis.com/auth/bigtable.data.readonly,https://www.googleapis.com/auth/cloud-bigtable.data,https://www.googleapis.com/auth/cloud-bigtable.data.readonly,https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/cloud-platform.read-only"
                  },
                  "methods": {
                    "ReadRows": {
                      "requestType": "ReadRowsRequest",
                      "responseType": "ReadRowsResponse",
                      "responseStream": true,
                      "options": {
                        "(google.api.http).post": "/v2/{table_name=projects/*/instances/*/tables/*}:readRows",
                        "(google.api.http).body": "*",
                        "(google.api.routing).routing_parameters.field": "app_profile_id",
                        "(google.api.routing).routing_parameters.path_template": "{table_name=projects/*/instances/*/tables/*}",
                        "(google.api.method_signature)": "table_name,app_profile_id"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v2/{table_name=projects/*/instances/*/tables/*}:readRows",
                            "body": "*"
                          }
                        },
                        {
                          "(google.api.routing)": {
                            "routing_parameters": [
                              {
                                "field": "table_name",
                                "path_template": "{table_name=projects/*/instances/*/tables/*}"
                              },
                              {
                                "field": "app_profile_id"
                              }
                            ]
                          }
                        },
                        {
                          "(google.api.method_signature)": "table_name"
                        },
                        {
                          "(google.api.method_signature)": "table_name,app_profile_id"
                        }
                      ]
                    },
                    "SampleRowKeys": {
                      "requestType": "SampleRowKeysRequest",
                      "responseType": "SampleRowKeysResponse",
                      "responseStream": true,
                      "options": {
                        "(google.api.http).get": "/v2/{table_name=projects/*/instances/*/tables/*}:sampleRowKeys",
                        "(google.api.routing).routing_parameters.field": "app_profile_id",
                        "(google.api.routing).routing_parameters.path_template": "{table_name=projects/*/instances/*/tables/*}",
                        "(google.api.method_signature)": "table_name,app_profile_id"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "get": "/v2/{table_name=projects/*/instances/*/tables/*}:sampleRowKeys"
                          }
                        },
                        {
                          "(google.api.routing)": {
                            "routing_parameters": [
                              {
                                "field": "table_name",
                                "path_template": "{table_name=projects/*/instances/*/tables/*}"
                              },
                              {
                                "field": "app_profile_id"
                              }
                            ]
                          }
                        },
                        {
                          "(google.api.method_signature)": "table_name"
                        },
                        {
                          "(google.api.method_signature)": "table_name,app_profile_id"
                        }
                      ]
                    },
                    "MutateRow": {
                      "requestType": "MutateRowRequest",
                      "responseType": "MutateRowResponse",
                      "options": {
                        "(google.api.http).post": "/v2/{table_name=projects/*/instances/*/tables/*}:mutateRow",
                        "(google.api.http).body": "*",
                        "(google.api.routing).routing_parameters.field": "app_profile_id",
                        "(google.api.routing).routing_parameters.path_template": "{table_name=projects/*/instances/*/tables/*}",
                        "(google.api.method_signature)": "table_name,row_key,mutations,app_profile_id"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v2/{table_name=projects/*/instances/*/tables/*}:mutateRow",
                            "body": "*"
                          }
                        },
                        {
                          "(google.api.routing)": {
                            "routing_parameters": [
                              {
                                "field": "table_name",
                                "path_template": "{table_name=projects/*/instances/*/tables/*}"
                              },
                              {
                                "field": "app_profile_id"
                              }
                            ]
                          }
                        },
                        {
                          "(google.api.method_signature)": "table_name,row_key,mutations"
                        },
                        {
                          "(google.api.method_signature)": "table_name,row_key,mutations,app_profile_id"
                        }
                      ]
                    },
                    "MutateRows": {
                      "requestType": "MutateRowsRequest",
                      "responseType": "MutateRowsResponse",
                      "responseStream": true,
                      "options": {
                        "(google.api.http).post": "/v2/{table_name=projects/*/instances/*/tables/*}:mutateRows",
                        "(google.api.http).body": "*",
                        "(google.api.routing).routing_parameters.field": "app_profile_id",
                        "(google.api.routing).routing_parameters.path_template": "{table_name=projects/*/instances/*/tables/*}",
                        "(google.api.method_signature)": "table_name,entries,app_profile_id"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v2/{table_name=projects/*/instances/*/tables/*}:mutateRows",
                            "body": "*"
                          }
                        },
                        {
                          "(google.api.routing)": {
                            "routing_parameters": [
                              {
                                "field": "table_name",
                                "path_template": "{table_name=projects/*/instances/*/tables/*}"
                              },
                              {
                                "field": "app_profile_id"
                              }
                            ]
                          }
                        },
                        {
                          "(google.api.method_signature)": "table_name,entries"
                        },
                        {
                          "(google.api.method_signature)": "table_name,entries,app_profile_id"
                        }
                      ]
                    },
                    "CheckAndMutateRow": {
                      "requestType": "CheckAndMutateRowRequest",
                      "responseType": "CheckAndMutateRowResponse",
                      "options": {
                        "(google.api.http).post": "/v2/{table_name=projects/*/instances/*/tables/*}:checkAndMutateRow",
                        "(google.api.http).body": "*",
                        "(google.api.routing).routing_parameters.field": "app_profile_id",
                        "(google.api.routing).routing_parameters.path_template": "{table_name=projects/*/instances/*/tables/*}",
                        "(google.api.method_signature)": "table_name,row_key,predicate_filter,true_mutations,false_mutations,app_profile_id"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v2/{table_name=projects/*/instances/*/tables/*}:checkAndMutateRow",
                            "body": "*"
                          }
                        },
                        {
                          "(google.api.routing)": {
                            "routing_parameters": [
                              {
                                "field": "table_name",
                                "path_template": "{table_name=projects/*/instances/*/tables/*}"
                              },
                              {
                                "field": "app_profile_id"
                              }
                            ]
                          }
                        },
                        {
                          "(google.api.method_signature)": "table_name,row_key,predicate_filter,true_mutations,false_mutations"
                        },
                        {
                          "(google.api.method_signature)": "table_name,row_key,predicate_filter,true_mutations,false_mutations,app_profile_id"
                        }
                      ]
                    },
                    "PingAndWarm": {
                      "requestType": "PingAndWarmRequest",
                      "responseType": "PingAndWarmResponse",
                      "options": {
                        "(google.api.http).post": "/v2/{name=projects/*/instances/*}:ping",
                        "(google.api.http).body": "*",
                        "(google.api.routing).routing_parameters.field": "app_profile_id",
                        "(google.api.routing).routing_parameters.path_template": "{name=projects/*/instances/*}",
                        "(google.api.method_signature)": "name,app_profile_id"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v2/{name=projects/*/instances/*}:ping",
                            "body": "*"
                          }
                        },
                        {
                          "(google.api.routing)": {
                            "routing_parameters": [
                              {
                                "field": "name",
                                "path_template": "{name=projects/*/instances/*}"
                              },
                              {
                                "field": "app_profile_id"
                              }
                            ]
                          }
                        },
                        {
                          "(google.api.method_signature)": "name"
                        },
                        {
                          "(google.api.method_signature)": "name,app_profile_id"
                        }
                      ]
                    },
                    "ReadModifyWriteRow": {
                      "requestType": "ReadModifyWriteRowRequest",
                      "responseType": "ReadModifyWriteRowResponse",
                      "options": {
                        "(google.api.http).post": "/v2/{table_name=projects/*/instances/*/tables/*}:readModifyWriteRow",
                        "(google.api.http).body": "*",
                        "(google.api.routing).routing_parameters.field": "app_profile_id",
                        "(google.api.routing).routing_parameters.path_template": "{table_name=projects/*/instances/*/tables/*}",
                        "(google.api.method_signature)": "table_name,row_key,rules,app_profile_id"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v2/{table_name=projects/*/instances/*/tables/*}:readModifyWriteRow",
                            "body": "*"
                          }
                        },
                        {
                          "(google.api.routing)": {
                            "routing_parameters": [
                              {
                                "field": "table_name",
                                "path_template": "{table_name=projects/*/instances/*/tables/*}"
                              },
                              {
                                "field": "app_profile_id"
                              }
                            ]
                          }
                        },
                        {
                          "(google.api.method_signature)": "table_name,row_key,rules"
                        },
                        {
                          "(google.api.method_signature)": "table_name,row_key,rules,app_profile_id"
                        }
                      ]
                    }
                  }
                },
                "ReadRowsRequest": {
                  "fields": {
                    "tableName": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Table"
                      }
                    },
                    "appProfileId": {
                      "type": "string",
                      "id": 5
                    },
                    "rows": {
                      "type": "RowSet",
                      "id": 2
                    },
                    "filter": {
                      "type": "RowFilter",
                      "id": 3
                    },
                    "rowsLimit": {
                      "type": "int64",
                      "id": 4
                    }
                  }
                },
                "ReadRowsResponse": {
                  "fields": {
                    "chunks": {
                      "rule": "repeated",
                      "type": "CellChunk",
                      "id": 1
                    },
                    "lastScannedRowKey": {
                      "type": "bytes",
                      "id": 2
                    }
                  },
                  "nested": {
                    "CellChunk": {
                      "oneofs": {
                        "rowStatus": {
                          "oneof": [
                            "resetRow",
                            "commitRow"
                          ]
                        }
                      },
                      "fields": {
                        "rowKey": {
                          "type": "bytes",
                          "id": 1
                        },
                        "familyName": {
                          "type": "google.protobuf.StringValue",
                          "id": 2
                        },
                        "qualifier": {
                          "type": "google.protobuf.BytesValue",
                          "id": 3
                        },
                        "timestampMicros": {
                          "type": "int64",
                          "id": 4
                        },
                        "labels": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 5
                        },
                        "value": {
                          "type": "bytes",
                          "id": 6
                        },
                        "valueSize": {
                          "type": "int32",
                          "id": 7
                        },
                        "resetRow": {
                          "type": "bool",
                          "id": 8
                        },
                        "commitRow": {
                          "type": "bool",
                          "id": 9
                        }
                      }
                    }
                  }
                },
                "SampleRowKeysRequest": {
                  "fields": {
                    "tableName": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Table"
                      }
                    },
                    "appProfileId": {
                      "type": "string",
                      "id": 2
                    }
                  }
                },
                "SampleRowKeysResponse": {
                  "fields": {
                    "rowKey": {
                      "type": "bytes",
                      "id": 1
                    },
                    "offsetBytes": {
                      "type": "int64",
                      "id": 2
                    }
                  }
                },
                "MutateRowRequest": {
                  "fields": {
                    "tableName": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Table"
                      }
                    },
                    "appProfileId": {
                      "type": "string",
                      "id": 4
                    },
                    "rowKey": {
                      "type": "bytes",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "mutations": {
                      "rule": "repeated",
                      "type": "Mutation",
                      "id": 3,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    }
                  }
                },
                "MutateRowResponse": {
                  "fields": {}
                },
                "MutateRowsRequest": {
                  "fields": {
                    "tableName": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Table"
                      }
                    },
                    "appProfileId": {
                      "type": "string",
                      "id": 3
                    },
                    "entries": {
                      "rule": "repeated",
                      "type": "Entry",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    }
                  },
                  "nested": {
                    "Entry": {
                      "fields": {
                        "rowKey": {
                          "type": "bytes",
                          "id": 1
                        },
                        "mutations": {
                          "rule": "repeated",
                          "type": "Mutation",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    }
                  }
                },
                "MutateRowsResponse": {
                  "fields": {
                    "entries": {
                      "rule": "repeated",
                      "type": "Entry",
                      "id": 1
                    }
                  },
                  "nested": {
                    "Entry": {
                      "fields": {
                        "index": {
                          "type": "int64",
                          "id": 1
                        },
                        "status": {
                          "type": "google.rpc.Status",
                          "id": 2
                        }
                      }
                    }
                  }
                },
                "CheckAndMutateRowRequest": {
                  "fields": {
                    "tableName": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Table"
                      }
                    },
                    "appProfileId": {
                      "type": "string",
                      "id": 7
                    },
                    "rowKey": {
                      "type": "bytes",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "predicateFilter": {
                      "type": "RowFilter",
                      "id": 6
                    },
                    "trueMutations": {
                      "rule": "repeated",
                      "type": "Mutation",
                      "id": 4
                    },
                    "falseMutations": {
                      "rule": "repeated",
                      "type": "Mutation",
                      "id": 5
                    }
                  }
                },
                "CheckAndMutateRowResponse": {
                  "fields": {
                    "predicateMatched": {
                      "type": "bool",
                      "id": 1
                    }
                  }
                },
                "PingAndWarmRequest": {
                  "fields": {
                    "name": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Instance"
                      }
                    },
                    "appProfileId": {
                      "type": "string",
                      "id": 2
                    }
                  }
                },
                "PingAndWarmResponse": {
                  "fields": {}
                },
                "ReadModifyWriteRowRequest": {
                  "fields": {
                    "tableName": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "bigtableadmin.googleapis.com/Table"
                      }
                    },
                    "appProfileId": {
                      "type": "string",
                      "id": 4
                    },
                    "rowKey": {
                      "type": "bytes",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "rules": {
                      "rule": "repeated",
                      "type": "ReadModifyWriteRule",
                      "id": 3,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    }
                  }
                },
                "ReadModifyWriteRowResponse": {
                  "fields": {
                    "row": {
                      "type": "Row",
                      "id": 1
                    }
                  }
                },
                "Row": {
                  "fields": {
                    "key": {
                      "type": "bytes",
                      "id": 1
                    },
                    "families": {
                      "rule": "repeated",
                      "type": "Family",
                      "id": 2
                    }
                  }
                },
                "Family": {
                  "fields": {
                    "name": {
                      "type": "string",
                      "id": 1
                    },
                    "columns": {
                      "rule": "repeated",
                      "type": "Column",
                      "id": 2
                    }
                  }
                },
                "Column": {
                  "fields": {
                    "qualifier": {
                      "type": "bytes",
                      "id": 1
                    },
                    "cells": {
                      "rule": "repeated",
                      "type": "Cell",
                      "id": 2
                    }
                  }
                },
                "Cell": {
                  "fields": {
                    "timestampMicros": {
                      "type": "int64",
                      "id": 1
                    },
                    "value": {
                      "type": "bytes",
                      "id": 2
                    },
                    "labels": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 3
                    }
                  }
                },
                "RowRange": {
                  "oneofs": {
                    "startKey": {
                      "oneof": [
                        "startKeyClosed",
                        "startKeyOpen"
                      ]
                    },
                    "endKey": {
                      "oneof": [
                        "endKeyOpen",
                        "endKeyClosed"
                      ]
                    }
                  },
                  "fields": {
                    "startKeyClosed": {
                      "type": "bytes",
                      "id": 1
                    },
                    "startKeyOpen": {
                      "type": "bytes",
                      "id": 2
                    },
                    "endKeyOpen": {
                      "type": "bytes",
                      "id": 3
                    },
                    "endKeyClosed": {
                      "type": "bytes",
                      "id": 4
                    }
                  }
                },
                "RowSet": {
                  "fields": {
                    "rowKeys": {
                      "rule": "repeated",
                      "type": "bytes",
                      "id": 1
                    },
                    "rowRanges": {
                      "rule": "repeated",
                      "type": "RowRange",
                      "id": 2
                    }
                  }
                },
                "ColumnRange": {
                  "oneofs": {
                    "startQualifier": {
                      "oneof": [
                        "startQualifierClosed",
                        "startQualifierOpen"
                      ]
                    },
                    "endQualifier": {
                      "oneof": [
                        "endQualifierClosed",
                        "endQualifierOpen"
                      ]
                    }
                  },
                  "fields": {
                    "familyName": {
                      "type": "string",
                      "id": 1
                    },
                    "startQualifierClosed": {
                      "type": "bytes",
                      "id": 2
                    },
                    "startQualifierOpen": {
                      "type": "bytes",
                      "id": 3
                    },
                    "endQualifierClosed": {
                      "type": "bytes",
                      "id": 4
                    },
                    "endQualifierOpen": {
                      "type": "bytes",
                      "id": 5
                    }
                  }
                },
                "TimestampRange": {
                  "fields": {
                    "startTimestampMicros": {
                      "type": "int64",
                      "id": 1
                    },
                    "endTimestampMicros": {
                      "type": "int64",
                      "id": 2
                    }
                  }
                },
                "ValueRange": {
                  "oneofs": {
                    "startValue": {
                      "oneof": [
                        "startValueClosed",
                        "startValueOpen"
                      ]
                    },
                    "endValue": {
                      "oneof": [
                        "endValueClosed",
                        "endValueOpen"
                      ]
                    }
                  },
                  "fields": {
                    "startValueClosed": {
                      "type": "bytes",
                      "id": 1
                    },
                    "startValueOpen": {
                      "type": "bytes",
                      "id": 2
                    },
                    "endValueClosed": {
                      "type": "bytes",
                      "id": 3
                    },
                    "endValueOpen": {
                      "type": "bytes",
                      "id": 4
                    }
                  }
                },
                "RowFilter": {
                  "oneofs": {
                    "filter": {
                      "oneof": [
                        "chain",
                        "interleave",
                        "condition",
                        "sink",
                        "passAllFilter",
                        "blockAllFilter",
                        "rowKeyRegexFilter",
                        "rowSampleFilter",
                        "familyNameRegexFilter",
                        "columnQualifierRegexFilter",
                        "columnRangeFilter",
                        "timestampRangeFilter",
                        "valueRegexFilter",
                        "valueRangeFilter",
                        "cellsPerRowOffsetFilter",
                        "cellsPerRowLimitFilter",
                        "cellsPerColumnLimitFilter",
                        "stripValueTransformer",
                        "applyLabelTransformer"
                      ]
                    }
                  },
                  "fields": {
                    "chain": {
                      "type": "Chain",
                      "id": 1
                    },
                    "interleave": {
                      "type": "Interleave",
                      "id": 2
                    },
                    "condition": {
                      "type": "Condition",
                      "id": 3
                    },
                    "sink": {
                      "type": "bool",
                      "id": 16
                    },
                    "passAllFilter": {
                      "type": "bool",
                      "id": 17
                    },
                    "blockAllFilter": {
                      "type": "bool",
                      "id": 18
                    },
                    "rowKeyRegexFilter": {
                      "type": "bytes",
                      "id": 4
                    },
                    "rowSampleFilter": {
                      "type": "double",
                      "id": 14
                    },
                    "familyNameRegexFilter": {
                      "type": "string",
                      "id": 5
                    },
                    "columnQualifierRegexFilter": {
                      "type": "bytes",
                      "id": 6
                    },
                    "columnRangeFilter": {
                      "type": "ColumnRange",
                      "id": 7
                    },
                    "timestampRangeFilter": {
                      "type": "TimestampRange",
                      "id": 8
                    },
                    "valueRegexFilter": {
                      "type": "bytes",
                      "id": 9
                    },
                    "valueRangeFilter": {
                      "type": "ValueRange",
                      "id": 15
                    },
                    "cellsPerRowOffsetFilter": {
                      "type": "int32",
                      "id": 10
                    },
                    "cellsPerRowLimitFilter": {
                      "type": "int32",
                      "id": 11
                    },
                    "cellsPerColumnLimitFilter": {
                      "type": "int32",
                      "id": 12
                    },
                    "stripValueTransformer": {
                      "type": "bool",
                      "id": 13
                    },
                    "applyLabelTransformer": {
                      "type": "string",
                      "id": 19
                    }
                  },
                  "nested": {
                    "Chain": {
                      "fields": {
                        "filters": {
                          "rule": "repeated",
                          "type": "RowFilter",
                          "id": 1
                        }
                      }
                    },
                    "Interleave": {
                      "fields": {
                        "filters": {
                          "rule": "repeated",
                          "type": "RowFilter",
                          "id": 1
                        }
                      }
                    },
                    "Condition": {
                      "fields": {
                        "predicateFilter": {
                          "type": "RowFilter",
                          "id": 1
                        },
                        "trueFilter": {
                          "type": "RowFilter",
                          "id": 2
                        },
                        "falseFilter": {
                          "type": "RowFilter",
                          "id": 3
                        }
                      }
                    }
                  }
                },
                "Mutation": {
                  "oneofs": {
                    "mutation": {
                      "oneof": [
                        "setCell",
                        "deleteFromColumn",
                        "deleteFromFamily",
                        "deleteFromRow"
                      ]
                    }
                  },
                  "fields": {
                    "setCell": {
                      "type": "SetCell",
                      "id": 1
                    },
                    "deleteFromColumn": {
                      "type": "DeleteFromColumn",
                      "id": 2
                    },
                    "deleteFromFamily": {
                      "type": "DeleteFromFamily",
                      "id": 3
                    },
                    "deleteFromRow": {
                      "type": "DeleteFromRow",
                      "id": 4
                    }
                  },
                  "nested": {
                    "SetCell": {
                      "fields": {
                        "familyName": {
                          "type": "string",
                          "id": 1
                        },
                        "columnQualifier": {
                          "type": "bytes",
                          "id": 2
                        },
                        "timestampMicros": {
                          "type": "int64",
                          "id": 3
                        },
                        "value": {
                          "type": "bytes",
                          "id": 4
                        }
                      }
                    },
                    "DeleteFromColumn": {
                      "fields": {
                        "familyName": {
                          "type": "string",
                          "id": 1
                        },
                        "columnQualifier": {
                          "type": "bytes",
                          "id": 2
                        },
                        "timeRange": {
                          "type": "TimestampRange",
                          "id": 3
                        }
                      }
                    },
                    "DeleteFromFamily": {
                      "fields": {
                        "familyName": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "DeleteFromRow": {
                      "fields": {}
                    }
                  }
                },
                "ReadModifyWriteRule": {
                  "oneofs": {
                    "rule": {
                      "oneof": [
                        "appendValue",
                        "incrementAmount"
                      ]
                    }
                  },
                  "fields": {
                    "familyName": {
                      "type": "string",
                      "id": 1
                    },
                    "columnQualifier": {
                      "type": "bytes",
                      "id": 2
                    },
                    "appendValue": {
                      "type": "bytes",
                      "id": 3
                    },
                    "incrementAmount": {
                      "type": "int64",
                      "id": 4
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api/annotations;annotations",
            "java_multiple_files": true,
            "java_outer_classname": "RoutingProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            },
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions"
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5,
                "UNORDERED_LIST": 6,
                "NON_EMPTY_DEFAULT": 7
              }
            },
            "resourceReference": {
              "type": "google.api.ResourceReference",
              "id": 1055,
              "extend": "google.protobuf.FieldOptions"
            },
            "resourceDefinition": {
              "rule": "repeated",
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.FileOptions"
            },
            "resource": {
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.MessageOptions"
            },
            "ResourceDescriptor": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "pattern": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "nameField": {
                  "type": "string",
                  "id": 3
                },
                "history": {
                  "type": "History",
                  "id": 4
                },
                "plural": {
                  "type": "string",
                  "id": 5
                },
                "singular": {
                  "type": "string",
                  "id": 6
                },
                "style": {
                  "rule": "repeated",
                  "type": "Style",
                  "id": 10
                }
              },
              "nested": {
                "History": {
                  "values": {
                    "HISTORY_UNSPECIFIED": 0,
                    "ORIGINALLY_SINGLE_PATTERN": 1,
                    "FUTURE_MULTI_PATTERN": 2
                  }
                },
                "Style": {
                  "values": {
                    "STYLE_UNSPECIFIED": 0,
                    "DECLARATIVE_FRIENDLY": 1
                  }
                }
              }
            },
            "ResourceReference": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "childType": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "routing": {
              "type": "google.api.RoutingRule",
              "id": 72295729,
              "extend": "google.protobuf.MethodOptions"
            },
            "RoutingRule": {
              "fields": {
                "routingParameters": {
                  "rule": "repeated",
                  "type": "RoutingParameter",
                  "id": 2
                }
              }
            },
            "RoutingParameter": {
              "fields": {
                "field": {
                  "type": "string",
                  "id": 1
                },
                "pathTemplate": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REQUIRED": 2,
                    "LABEL_REPEATED": 3
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "phpGenericServices": {
                  "type": "bool",
                  "id": 42,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  5,
                  5
                ],
                [
                  6,
                  6
                ],
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    }
                  }
                }
              }
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Empty": {
              "fields": {}
            },
            "FieldMask": {
              "fields": {
                "paths": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DoubleValue": {
              "fields": {
                "value": {
                  "type": "double",
                  "id": 1
                }
              }
            },
            "FloatValue": {
              "fields": {
                "value": {
                  "type": "float",
                  "id": 1
                }
              }
            },
            "Int64Value": {
              "fields": {
                "value": {
                  "type": "int64",
                  "id": 1
                }
              }
            },
            "UInt64Value": {
              "fields": {
                "value": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "Int32Value": {
              "fields": {
                "value": {
                  "type": "int32",
                  "id": 1
                }
              }
            },
            "UInt32Value": {
              "fields": {
                "value": {
                  "type": "uint32",
                  "id": 1
                }
              }
            },
            "BoolValue": {
              "fields": {
                "value": {
                  "type": "bool",
                  "id": 1
                }
              }
            },
            "StringValue": {
              "fields": {
                "value": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "BytesValue": {
              "fields": {
                "value": {
                  "type": "bytes",
                  "id": 1
                }
              }
            }
          }
        },
        "iam": {
          "nested": {
            "v1": {
              "options": {
                "cc_enable_arenas": true,
                "csharp_namespace": "Google.Cloud.Iam.V1",
                "go_package": "google.golang.org/genproto/googleapis/iam/v1;iam",
                "java_multiple_files": true,
                "java_outer_classname": "PolicyProto",
                "java_package": "com.google.iam.v1",
                "php_namespace": "Google\\Cloud\\Iam\\V1"
              },
              "nested": {
                "IAMPolicy": {
                  "options": {
                    "(google.api.default_host)": "iam-meta-api.googleapis.com"
                  },
                  "methods": {
                    "SetIamPolicy": {
                      "requestType": "SetIamPolicyRequest",
                      "responseType": "Policy",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:setIamPolicy",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:setIamPolicy",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "GetIamPolicy": {
                      "requestType": "GetIamPolicyRequest",
                      "responseType": "Policy",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:getIamPolicy",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:getIamPolicy",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "TestIamPermissions": {
                      "requestType": "TestIamPermissionsRequest",
                      "responseType": "TestIamPermissionsResponse",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:testIamPermissions",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:testIamPermissions",
                            "body": "*"
                          }
                        }
                      ]
                    }
                  }
                },
                "SetIamPolicyRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "policy": {
                      "type": "Policy",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    }
                  }
                },
                "GetIamPolicyRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "options": {
                      "type": "GetPolicyOptions",
                      "id": 2
                    }
                  }
                },
                "TestIamPermissionsRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "permissions": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    }
                  }
                },
                "TestIamPermissionsResponse": {
                  "fields": {
                    "permissions": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 1
                    }
                  }
                },
                "GetPolicyOptions": {
                  "fields": {
                    "requestedPolicyVersion": {
                      "type": "int32",
                      "id": 1
                    }
                  }
                },
                "Policy": {
                  "fields": {
                    "version": {
                      "type": "int32",
                      "id": 1
                    },
                    "bindings": {
                      "rule": "repeated",
                      "type": "Binding",
                      "id": 4
                    },
                    "etag": {
                      "type": "bytes",
                      "id": 3
                    }
                  }
                },
                "Binding": {
                  "fields": {
                    "role": {
                      "type": "string",
                      "id": 1
                    },
                    "members": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2
                    },
                    "condition": {
                      "type": "google.type.Expr",
                      "id": 3
                    }
                  }
                },
                "PolicyDelta": {
                  "fields": {
                    "bindingDeltas": {
                      "rule": "repeated",
                      "type": "BindingDelta",
                      "id": 1
                    },
                    "auditConfigDeltas": {
                      "rule": "repeated",
                      "type": "AuditConfigDelta",
                      "id": 2
                    }
                  }
                },
                "BindingDelta": {
                  "fields": {
                    "action": {
                      "type": "Action",
                      "id": 1
                    },
                    "role": {
                      "type": "string",
                      "id": 2
                    },
                    "member": {
                      "type": "string",
                      "id": 3
                    },
                    "condition": {
                      "type": "google.type.Expr",
                      "id": 4
                    }
                  },
                  "nested": {
                    "Action": {
                      "values": {
                        "ACTION_UNSPECIFIED": 0,
                        "ADD": 1,
                        "REMOVE": 2
                      }
                    }
                  }
                },
                "AuditConfigDelta": {
                  "fields": {
                    "action": {
                      "type": "Action",
                      "id": 1
                    },
                    "service": {
                      "type": "string",
                      "id": 2
                    },
                    "exemptedMember": {
                      "type": "string",
                      "id": 3
                    },
                    "logType": {
                      "type": "string",
                      "id": 4
                    }
                  },
                  "nested": {
                    "Action": {
                      "values": {
                        "ACTION_UNSPECIFIED": 0,
                        "ADD": 1,
                        "REMOVE": 2
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "type": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/type/expr;expr",
            "java_multiple_files": true,
            "java_outer_classname": "ExprProto",
            "java_package": "com.google.type",
            "objc_class_prefix": "GTP"
          },
          "nested": {
            "Expr": {
              "fields": {
                "expression": {
                  "type": "string",
                  "id": 1
                },
                "title": {
                  "type": "string",
                  "id": 2
                },
                "description": {
                  "type": "string",
                  "id": 3
                },
                "location": {
                  "type": "string",
                  "id": 4
                }
              }
            }
          }
        },
        "longrunning": {
          "options": {
            "cc_enable_arenas": true,
            "csharp_namespace": "Google.LongRunning",
            "go_package": "google.golang.org/genproto/googleapis/longrunning;longrunning",
            "java_multiple_files": true,
            "java_outer_classname": "OperationsProto",
            "java_package": "com.google.longrunning",
            "php_namespace": "Google\\LongRunning"
          },
          "nested": {
            "operationInfo": {
              "type": "google.longrunning.OperationInfo",
              "id": 1049,
              "extend": "google.protobuf.MethodOptions"
            },
            "Operations": {
              "options": {
                "(google.api.default_host)": "longrunning.googleapis.com"
              },
              "methods": {
                "ListOperations": {
                  "requestType": "ListOperationsRequest",
                  "responseType": "ListOperationsResponse",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations}",
                    "(google.api.method_signature)": "name,filter"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name,filter"
                    }
                  ]
                },
                "GetOperation": {
                  "requestType": "GetOperationRequest",
                  "responseType": "Operation",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "DeleteOperation": {
                  "requestType": "DeleteOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).delete": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "delete": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "CancelOperation": {
                  "requestType": "CancelOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).post": "/v1/{name=operations/**}:cancel",
                    "(google.api.http).body": "*",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "post": "/v1/{name=operations/**}:cancel",
                        "body": "*"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "WaitOperation": {
                  "requestType": "WaitOperationRequest",
                  "responseType": "Operation"
                }
              }
            },
            "Operation": {
              "oneofs": {
                "result": {
                  "oneof": [
                    "error",
                    "response"
                  ]
                }
              },
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "metadata": {
                  "type": "google.protobuf.Any",
                  "id": 2
                },
                "done": {
                  "type": "bool",
                  "id": 3
                },
                "error": {
                  "type": "google.rpc.Status",
                  "id": 4
                },
                "response": {
                  "type": "google.protobuf.Any",
                  "id": 5
                }
              }
            },
            "GetOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "ListOperationsRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 4
                },
                "filter": {
                  "type": "string",
                  "id": 1
                },
                "pageSize": {
                  "type": "int32",
                  "id": 2
                },
                "pageToken": {
                  "type": "string",
                  "id": 3
                }
              }
            },
            "ListOperationsResponse": {
              "fields": {
                "operations": {
                  "rule": "repeated",
                  "type": "Operation",
                  "id": 1
                },
                "nextPageToken": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "CancelOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DeleteOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "WaitOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "timeout": {
                  "type": "google.protobuf.Duration",
                  "id": 2
                }
              }
            },
            "OperationInfo": {
              "fields": {
                "responseType": {
                  "type": "string",
                  "id": 1
                },
                "metadataType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "rpc": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/rpc/status;status",
            "java_multiple_files": true,
            "java_outer_classname": "StatusProto",
            "java_package": "com.google.rpc",
            "objc_class_prefix": "RPC"
          },
          "nested": {
            "Status": {
              "fields": {
                "code": {
                  "type": "int32",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                },
                "details": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            }
          }
        }
      }
    }
  }
}