version: 2
workflows:
  version: 2
  tests:
    jobs: &workflow_jobs
      - node6:
          filters:
            tags:
              only: /.*/
      - node8:
          filters:
            tags:
              only: /.*/
      - node9:
          filters:
            tags:
              only: /.*/
      - lint:
          requires:
            - node6
            - node8
            - node9
          filters:
            tags:
              only: /.*/
      - docs:
          requires:
            - node6
            - node8
            - node9
          filters:
            tags:
              only: /.*/
      - system_tests:
          requires:
            - lint
            - docs
          filters:
            branches:
              only: master
            tags:
              only: '/^v[\d.]+$/'
      - sample_tests:
          requires:
            - lint
            - docs
          filters:
            branches:
              only: master
            tags:
              only: '/^v[\d.]+$/'
      - publish_npm:
          requires:
            - system_tests
            - sample_tests
          filters:
            branches:
              ignore: /.*/
            tags:
              only: '/^v[\d.]+$/'
  nightly:
    triggers:
      - schedule:
          cron: 0 7 * * *
          filters:
            branches:
              only: master
    jobs: *workflow_jobs
jobs:
  node6:
    docker:
      - image: 'node:6'
        user: node
    steps: *unit_tests_steps
  node8:
    docker:
      - image: 'node:8'
        user: node
    steps: *unit_tests_steps
  node9:
    docker:
      - image: 'node:9'
        user: node
    steps: *unit_tests_steps
  lint:
    docker:
      - image: 'node:8'
        user: node
    steps:
      - checkout
      - run: *remove_package_lock
      - run:
          name: Install modules and dependencies.
          command: |
            mkdir -p /home/node/.npm-global
            npm install
            repo_tools="node_modules/@google-cloud/nodejs-repo-tools/bin/tools"
            if ! test -x "$repo_tools"; then
              chmod +x "$repo_tools"
            fi
            npm link
          environment:
            NPM_CONFIG_PREFIX: /home/node/.npm-global
      - run:
          name: Link the module being tested to the samples.
          command: |
            cd samples/
            npm link @google-cloud/bigtable
            npm install
            cd ..
          environment:
            NPM_CONFIG_PREFIX: /home/node/.npm-global
      - run:
          name: Run linting.
          command: npm run lint
          environment:
            NPM_CONFIG_PREFIX: /home/node/.npm-global
  docs:
    docker:
      - image: 'node:8'
    steps:
      - checkout
      - run: *remove_package_lock
      - run:
          name: Install modules and dependencies.
          command: |-
            npm install
            repo_tools="node_modules/@google-cloud/nodejs-repo-tools/bin/tools"
            if ! test -x "$repo_tools"; then
              chmod +x "$repo_tools"
            fi
      - run:
          name: Build documentation.
          command: npm run docs
  sample_tests:
    docker:
      - image: 'node:8'
        user: node
    steps:
      - checkout
      - run: *remove_package_lock
      - run:
          name: Decrypt credentials.
          command: |
            openssl aes-256-cbc -d -in .circleci/key.json.enc \
                -out .circleci/key.json \
                -k "${SYSTEM_TESTS_ENCRYPTION_KEY}"
      - run:
          name: Install and link the module.
          command: |
            mkdir -p /home/node/.npm-global
            npm install
            repo_tools="node_modules/@google-cloud/nodejs-repo-tools/bin/tools"
            if ! test -x "$repo_tools"; then
              chmod +x "$repo_tools"
            fi
            npm link
          environment:
            NPM_CONFIG_PREFIX: /home/node/.npm-global
      - run:
          name: Link the module being tested to the samples.
          command: |
            cd samples/
            npm link @google-cloud/bigtable
            npm install
            cd ..
          environment:
            NPM_CONFIG_PREFIX: /home/node/.npm-global
      - run:
          name: Run sample tests.
          command: npm run samples-test
          environment:
            GCLOUD_PROJECT: long-door-651
            GOOGLE_APPLICATION_CREDENTIALS: /home/node/bigtable-samples/.circleci/key.json
            NPM_CONFIG_PREFIX: /home/node/.npm-global
      - run:
          name: Remove unencrypted key.
          command: rm .circleci/key.json
          when: always
    working_directory: /home/node/bigtable-samples/
  system_tests:
    docker:
      - image: 'node:8'
        user: node
    steps:
      - checkout
      - run: *remove_package_lock
      - run:
          name: Decrypt credentials.
          command: |
            openssl aes-256-cbc -d -in .circleci/key.json.enc \
                -out .circleci/key.json \
                -k "${SYSTEM_TESTS_ENCRYPTION_KEY}"
      - run:
          name: Install modules and dependencies.
          command: |-
            npm install
            repo_tools="node_modules/@google-cloud/nodejs-repo-tools/bin/tools"
            if ! test -x "$repo_tools"; then
              chmod +x "$repo_tools"
            fi
      - run:
          name: Run system tests.
          command: npm run system-test
          environment:
            GOOGLE_APPLICATION_CREDENTIALS: .circleci/key.json
      - run:
          name: Remove unencrypted key.
          command: rm .circleci/key.json
          when: always
  publish_npm:
    docker:
      - image: 'node:8'
        user: node
    steps:
      - checkout
      - run:
          name: Set NPM authentication.
          command: 'echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc'
      - run:
          name: Publish the module to npm.
          command: npm publish
