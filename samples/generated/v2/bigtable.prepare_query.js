// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **


 /**
 * NOTE: This sample is autogenerated, but this library contains handwritten
 * samples that are the recommended way to use this library. Please refer to
 * samples outside of the generated/ folder for these recommendations.
 */ 
'use strict';

function main(instanceName, query, paramTypes) {
  // [START bigtable_v2_generated_Bigtable_PrepareQuery_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The unique name of the instance against which the query should be
   *  executed.
   *  Values are of the form `projects/<project>/instances/<instance>`
   */
  // const instanceName = 'abc123'
  /**
   *  Optional. This value specifies routing for preparing the query. Note that
   *  this `app_profile_id` is only used for preparing the query. The actual
   *  query execution will use the app profile specified in the
   *  `ExecuteQueryRequest`. If not specified, the `default` application profile
   *  will be used.
   */
  // const appProfileId = 'abc123'
  /**
   *  Required. The query string.
   */
  // const query = 'abc123'
  /**
   *  Protocol buffer format as described by ProtoSchema and ProtoRows
   *  messages.
   */
  // const protoFormat = {}
  /**
   *  Required. `param_types` is a map of parameter identifier strings to their
   *  `Type`s.
   *  In query string, a parameter placeholder consists of the
   *  `@` character followed by the parameter name (for example, `@firstName`) in
   *  the query string.
   *  For example, if param_types"firstName"  = Bytes then @firstName will be a
   *  query parameter of type Bytes. The specific `Value` to be used for the
   *  query execution must be sent in `ExecuteQueryRequest` in the `params` map.
   */
  // const paramTypes = [1,2,3,4]

  // Imports the Bigtable library
  const {BigtableClient} = require('@google-cloud/bigtable').v2;

  // Instantiates a client
  const bigtableClient = new BigtableClient();

  async function callPrepareQuery() {
    // Construct request
    const request = {
      instanceName,
      query,
      paramTypes,
    };

    // Run request
    const response = await bigtableClient.prepareQuery(request);
    console.log(response);
  }

  callPrepareQuery();
  // [END bigtable_v2_generated_Bigtable_PrepareQuery_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
