1. The operation starts
getDate call returns 1000 ms
2. The attempt starts.
getDate call returns 2000 ms
3. Client receives status information.
4. Client receives metadata.
Value added to histogram bigtable.googleapis.com:server_latencies = 101 with dimensions my-project;fakeInstanceId;fakeTableId;;doLater;;fakeMethod;PENDING;;YES;nodejs-bigtable
5. Client receives first row.
getDate call returns 3000 ms
Value added to histogram bigtable.googleapis.com:first_response_latencies = 2000 with dimensions my-project;fakeInstanceId;fakeTableId;;doLater;;fakeMethod;;PENDING;;nodejs-bigtable
6. Client receives metadata.
7. Client receives second row.
getDate call returns 4000 ms
8. A transient error occurs.
getDate call returns 5000 ms
Value added to histogram bigtable.googleapis.com:attempt_latencies = 3000 with dimensions my-project;fakeInstanceId;fakeTableId;;doLater;;fakeMethod;ERROR;;YES;nodejs-bigtable
9. After a timeout, the second attempt is made.
getDate call returns 6000 ms
10. Client receives status information.
11. Client receives metadata.
12. Client receives third row.
getDate call returns 7000 ms
13. Client receives metadata.
14. Client receives fourth row.
getDate call returns 8000 ms
15. User reads row 1
getDate call returns 9000 ms
16. User reads row 2
getDate call returns 10000 ms
Value added to histogram bigtable.googleapis.com:application_blocking_latencies = 1000 with dimensions my-project;fakeInstanceId;fakeTableId;;doLater;;fakeMethod;;;;nodejs-bigtable
17. User reads row 3
getDate call returns 11000 ms
Value added to histogram bigtable.googleapis.com:application_blocking_latencies = 1000 with dimensions my-project;fakeInstanceId;fakeTableId;;doLater;;fakeMethod;;;;nodejs-bigtable
18. User reads row 4
getDate call returns 12000 ms
Value added to histogram bigtable.googleapis.com:application_blocking_latencies = 1000 with dimensions my-project;fakeInstanceId;fakeTableId;;doLater;;fakeMethod;;;;nodejs-bigtable
19. Stream ends, operation completes
getDate call returns 13000 ms
getDate call returns 14000 ms
Value added to histogram bigtable.googleapis.com:attempt_latencies = 8000 with dimensions my-project;fakeInstanceId;fakeTableId;;doLater;;fakeMethod;SUCCESS;;YES;nodejs-bigtable
Value added to histogram bigtable.googleapis.com:operation_latencies = 12000 with dimensions my-project;fakeInstanceId;fakeTableId;;doLater;;fakeMethod;;SUCCESS;YES;nodejs-bigtable
Value added to counter bigtable.googleapis.com:retry_count = 1 with dimensions my-project;fakeInstanceId;fakeTableId;;doLater;;fakeMethod;;SUCCESS;;nodejs-bigtable
Value added to histogram bigtable.googleapis.com:connectivity_error_count = 1 with dimensions my-project;fakeInstanceId;fakeTableId;;doLater;;fakeMethod;SUCCESS;;;nodejs-bigtable
