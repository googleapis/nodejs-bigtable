// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(parent) {
  // [START bigtableadmin_v2_generated_BigtableInstanceAdmin_ListHotTablets_async]
  /**
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The cluster name to list hot tablets.
   *  Value is in the following form:
   *  `projects/{project}/instances/{instance}/clusters/{cluster}`.
   */
  // const parent = 'abc123'
  /**
   *  The start time to list hot tablets. The hot tablets in the response will
   *  have start times between the requested start time and end time. Start time
   *  defaults to Now if it is unset, and end time defaults to Now - 24 hours if
   *  it is unset. The start time should be less than the end time, and the
   *  maximum allowed time range between start time and end time is 48 hours.
   *  Start time and end time should have values between Now and Now - 14 days.
   */
  // const startTime = {}
  /**
   *  The end time to list hot tablets.
   */
  // const endTime = {}
  /**
   *  Maximum number of results per page.
   *  A page_size that is empty or zero lets the server choose the number of
   *  items to return. A page_size which is strictly positive will return at most
   *  that many items. A negative page_size will cause an error.
   *  Following the first request, subsequent paginated calls do not need a
   *  page_size field. If a page_size is set in subsequent calls, it must match
   *  the page_size given in the first request.
   */
  // const pageSize = 1234
  /**
   *  The value of `next_page_token` returned by a previous call.
   */
  // const pageToken = 'abc123'

  // Imports the Admin library
  const {BigtableInstanceAdminClient} = require('@google-cloud/bigtable').v2;

  // Instantiates a client
  const adminClient = new BigtableInstanceAdminClient();

  async function callListHotTablets() {
    // Construct request
    const request = {
      parent,
    };

    // Run request
    const iterable = await adminClient.listHotTabletsAsync(request);
    for await (const response of iterable) {
        console.log(response);
    }
  }

  callListHotTablets();
  // [END bigtableadmin_v2_generated_BigtableInstanceAdmin_ListHotTablets_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
